/* 사용자 */
CREATE TABLE USERS (
	USERID VARCHAR2(50) NOT NULL, /* 아이디 */
	USERPWD VARCHAR2(200) NOT NULL, /* 패스워드 */
	ENABLED CHAR(1) DEFAULT 1 NOT NULL, /* 시큐리티 */
	JOINDATE DATE NOT NULL, /* 가입일 */
	FIRST_NAME VARCHAR2(20) NOT NULL, /* 성 */
	LAST_NAME VARCHAR(20) NOT NULL, /* 이름 */
	MAIL_ACCEPT NVARCHAR2(10) NOT NULL, /* 메일계정타입 */
	STATUS NUMBER, /* 계정타입 */
	PROFILE_PATH NVARCHAR2(300) /* 프로필 */
);

COMMENT ON TABLE USERS IS '사용자';

COMMENT ON COLUMN USERS.USERID IS '아이디';

COMMENT ON COLUMN USERS.USERPWD IS '패스워드';

COMMENT ON COLUMN USERS.ENABLED IS '시큐리티';

COMMENT ON COLUMN USERS.JOINDATE IS '가입일';

COMMENT ON COLUMN USERS.FIRST_NAME IS '성';

COMMENT ON COLUMN USERS.LAST_NAME IS '이름';

COMMENT ON COLUMN USERS.MAIL_ACCEPT IS '메일계정타입';

COMMENT ON COLUMN USERS.STATUS IS '계정타입';

COMMENT ON COLUMN USERS.PROFILE_PATH IS '프로필';

CREATE UNIQUE INDEX PK_USERS
	ON USERS (
		USERID ASC
	);

ALTER TABLE USERS
	ADD
		CONSTRAINT PK_USERS
		PRIMARY KEY (
			USERID
		);

/* 이메일내역 */
CREATE TABLE EMAIL (
	IDX NUMBER NOT NULL, /* 메일인덱스 */
	STOREID VARCHAR2(50) NOT NULL, /* 보낸이 */
	FROMMAIL VARCHAR2(50), /* 메일(관리자) */
	TOMAIL VARCHAR2(50) NOT NULL, /* 받는이 */
	CCMAIL VARCHAR2(50), /* 참조자 */
	TITLE VARCHAR2(50), /* 메일제목 */
	CONTENT NVARCHAR2(2000) /* 메일내용 */
);

COMMENT ON TABLE EMAIL IS '이메일내역';

COMMENT ON COLUMN EMAIL.IDX IS '메일인덱스';

COMMENT ON COLUMN EMAIL.STOREID IS '보낸이';

COMMENT ON COLUMN EMAIL.FROMMAIL IS '메일(관리자)';

COMMENT ON COLUMN EMAIL.TOMAIL IS '받는이';

COMMENT ON COLUMN EMAIL.CCMAIL IS '참조자';

COMMENT ON COLUMN EMAIL.TITLE IS '메일제목';

COMMENT ON COLUMN EMAIL.CONTENT IS '메일내용';

CREATE UNIQUE INDEX PK_EMAIL
	ON EMAIL (
		IDX ASC
	);

ALTER TABLE EMAIL
	ADD
		CONSTRAINT PK_EMAIL
		PRIMARY KEY (
			IDX
		);

/* 상점 */
CREATE TABLE STORE (
	STOREID VARCHAR2(50) NOT NULL, /* 아이디 */
	NAME NVARCHAR2(40), /* 상점명 */
	PHONE VARCHAR2(20), /* 대표번호 */
	ADDRESS NVARCHAR2(100), /* 주소 */
	LATITUDE VARCHAR2(20) NOT NULL, /* 위도 */
	LONGITUDE VARCHAR2(20) NOT NULL /* 경도 */
);

COMMENT ON TABLE STORE IS '상점';

COMMENT ON COLUMN STORE.STOREID IS '아이디';

COMMENT ON COLUMN STORE.NAME IS '상점명';

COMMENT ON COLUMN STORE.PHONE IS '대표번호';

COMMENT ON COLUMN STORE.ADDRESS IS '주소';

COMMENT ON COLUMN STORE.LATITUDE IS '위도';

COMMENT ON COLUMN STORE.LONGITUDE IS '경도';

CREATE UNIQUE INDEX PK_STORE
	ON STORE (
		STOREID ASC
	);

ALTER TABLE STORE
	ADD
		CONSTRAINT PK_STORE
		PRIMARY KEY (
			STOREID
		);

/* 상품 */
CREATE TABLE ITEMS (
	IDX NUMBER NOT NULL, /* 상품인덱스 */
	PR_IDX NUMBER NOT NULL, /* 프리미엄인덱스 */
	NAME NVARCHAR2(100) NOT NULL, /* 상품이름 */
	PRICE NUMBER, /* 상품가격 */
	CONTENT NVARCHAR2(2000), /* 상품내용 */
	PHOTO NVARCHAR2(60) /* 상품이미지 */
);

COMMENT ON TABLE ITEMS IS '상품';

COMMENT ON COLUMN ITEMS.IDX IS '상품인덱스';

COMMENT ON COLUMN ITEMS.PR_IDX IS '프리미엄인덱스';

COMMENT ON COLUMN ITEMS.NAME IS '상품이름';

COMMENT ON COLUMN ITEMS.PRICE IS '상품가격';

COMMENT ON COLUMN ITEMS.CONTENT IS '상품내용';

COMMENT ON COLUMN ITEMS.PHOTO IS '상품이미지';

CREATE UNIQUE INDEX PK_ITEMS
	ON ITEMS (
		IDX ASC
	);

ALTER TABLE ITEMS
	ADD
		CONSTRAINT PK_ITEMS
		PRIMARY KEY (
			IDX
		);

/* 예약 */
CREATE TABLE RESERVATION (
	IDX NUMBER NOT NULL, /* 예약인덱스 */
	USERID VARCHAR2(50), /* 예약자 */
	STOREID VARCHAR2(50), /* 아이디 */
	NAME VARCHAR2(20) NOT NULL, /* 예약자이름 */
	CNT NUMBER NOT NULL, /* 물품수 */
	PRICE NUMBER NOT NULL, /* 결제금액 */
	PAYMENT_METHOD NVARCHAR2(10) NOT NULL, /* 결제방법 */
	PAYMENT_DATE DATE, /* 결제일 */
	SDATE DATE, /* 예약시작일 */
	EDATE DATE, /* 예약종료일 */
	STATUS NUMBER NOT NULL /* 예약상태 */
);

COMMENT ON TABLE RESERVATION IS '예약';

COMMENT ON COLUMN RESERVATION.IDX IS '예약인덱스';

COMMENT ON COLUMN RESERVATION.USERID IS '예약자';

COMMENT ON COLUMN RESERVATION.STOREID IS '아이디';

COMMENT ON COLUMN RESERVATION.NAME IS '예약자이름';

COMMENT ON COLUMN RESERVATION.CNT IS '물품수';

COMMENT ON COLUMN RESERVATION.PRICE IS '결제금액';

COMMENT ON COLUMN RESERVATION.PAYMENT_METHOD IS '결제방법';

COMMENT ON COLUMN RESERVATION.PAYMENT_DATE IS '결제일';

COMMENT ON COLUMN RESERVATION.SDATE IS '예약시작일';

COMMENT ON COLUMN RESERVATION.EDATE IS '예약종료일';

COMMENT ON COLUMN RESERVATION.STATUS IS '예약상태';

CREATE UNIQUE INDEX PK_RESERVATION
	ON RESERVATION (
		IDX ASC
	);

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT PK_RESERVATION
		PRIMARY KEY (
			IDX
		);

/* 리뷰 */
CREATE TABLE REVIEW (
	IDX NUMBER NOT NULL, /* 리뷰번호 */
	RS_IDX NUMBER NOT NULL, /* 예약번호 */
	PARENT NUMBER, /* 부모리뷰 */
	NAME NVARCHAR2(20), /* 작성자 */
	CONTENT NVARCHAR2(2000), /* 리뷰내용 */
	GRADE NUMBER, /* 평점 */
	EDATE DATE, /* 리뷰날짜 */
	STATUS NUMBER /* 상태값 */
);

COMMENT ON TABLE REVIEW IS '리뷰';

COMMENT ON COLUMN REVIEW.IDX IS '리뷰번호';

COMMENT ON COLUMN REVIEW.RS_IDX IS '예약번호';

COMMENT ON COLUMN REVIEW.PARENT IS '부모리뷰';

COMMENT ON COLUMN REVIEW.NAME IS '작성자';

COMMENT ON COLUMN REVIEW.CONTENT IS '리뷰내용';

COMMENT ON COLUMN REVIEW.GRADE IS '평점';

COMMENT ON COLUMN REVIEW.EDATE IS '리뷰날짜';

COMMENT ON COLUMN REVIEW.STATUS IS '상태값';

CREATE UNIQUE INDEX PK_REVIEW
	ON REVIEW (
		IDX ASC
	);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT PK_REVIEW
		PRIMARY KEY (
			IDX
		);

/* 프리미엄점주 */
CREATE TABLE PREMIUM (
	IDX NUMBER NOT NULL, /* 프리미엄인덱스 */
	STOREID VARCHAR2(50) NOT NULL, /* 아이디 */
	SDATE DATE NOT NULL, /* 가입일 */
	EDATE DATE NOT NULL /* 종료일 */
);

COMMENT ON TABLE PREMIUM IS '프리미엄점주';

COMMENT ON COLUMN PREMIUM.IDX IS '프리미엄인덱스';

COMMENT ON COLUMN PREMIUM.STOREID IS '아이디';

COMMENT ON COLUMN PREMIUM.SDATE IS '가입일';

COMMENT ON COLUMN PREMIUM.EDATE IS '종료일';

CREATE UNIQUE INDEX PK_PREMIUM
	ON PREMIUM (
		IDX ASC
	);

ALTER TABLE PREMIUM
	ADD
		CONSTRAINT PK_PREMIUM
		PRIMARY KEY (
			IDX
		);

/* 점주 */
CREATE TABLE STOREKEEPER (
	STOREID VARCHAR2(50) NOT NULL, /* 아이디 */
	STATUS VARCHAR2(15) NOT NULL /* 계정대기상태 */
);

COMMENT ON TABLE STOREKEEPER IS '점주';

COMMENT ON COLUMN STOREKEEPER.STOREID IS '아이디';

COMMENT ON COLUMN STOREKEEPER.STATUS IS '계정대기상태';

CREATE UNIQUE INDEX PK_STOREKEEPER
	ON STOREKEEPER (
		STOREID ASC
	);

ALTER TABLE STOREKEEPER
	ADD
		CONSTRAINT PK_STOREKEEPER
		PRIMARY KEY (
			STOREID
		);

/* 채팅내역 */
CREATE TABLE CHAT_MESSAGE (
	IDX NUMBER NOT NULL, /* 인덱스 */
	USERID VARCHAR2(50), /* 아이디 */
	ROOM_IDX NVARCHAR2(2000), /* 인덱스2 */
	CONTENT NVARCHAR2(2000), /* 메세지내용 */
	SDATE DATE, /* 보낸시간 */
	READ NUMBER, /* 확인여부 */
	TYPE NVARCHAR2(30) /* 입퇴장타입 */
);

COMMENT ON TABLE CHAT_MESSAGE IS '채팅내역';

COMMENT ON COLUMN CHAT_MESSAGE.IDX IS '인덱스';

COMMENT ON COLUMN CHAT_MESSAGE.USERID IS '아이디';

COMMENT ON COLUMN CHAT_MESSAGE.ROOM_IDX IS '인덱스2';

COMMENT ON COLUMN CHAT_MESSAGE.CONTENT IS '메세지내용';

COMMENT ON COLUMN CHAT_MESSAGE.SDATE IS '보낸시간';

COMMENT ON COLUMN CHAT_MESSAGE.READ IS '확인여부';

COMMENT ON COLUMN CHAT_MESSAGE.TYPE IS '입퇴장타입';

CREATE UNIQUE INDEX PK_CHAT_MESSAGE
	ON CHAT_MESSAGE (
		IDX ASC
	);

ALTER TABLE CHAT_MESSAGE
	ADD
		CONSTRAINT PK_CHAT_MESSAGE
		PRIMARY KEY (
			IDX
		);

/* 채팅방 */
CREATE TABLE CHAT_ROOM (
	IDX NVARCHAR2(2000) NOT NULL, /* 인덱스 */
	STATUS NUMBER, /* 채팅방상태 */
	SDATE DATE, /* 생성시간 */
	LAST_SUBJECT NVARCHAR2(2000), /* 최근메세지 */
	LAST_TIME DATE /* 마지막보낸시간 */
);

COMMENT ON TABLE CHAT_ROOM IS '채팅방';

COMMENT ON COLUMN CHAT_ROOM.IDX IS '인덱스';

COMMENT ON COLUMN CHAT_ROOM.STATUS IS '채팅방상태';

COMMENT ON COLUMN CHAT_ROOM.SDATE IS '생성시간';

COMMENT ON COLUMN CHAT_ROOM.LAST_SUBJECT IS '최근메세지';

COMMENT ON COLUMN CHAT_ROOM.LAST_TIME IS '마지막보낸시간';

CREATE UNIQUE INDEX PK_CHAT_ROOM
	ON CHAT_ROOM (
		IDX ASC
	);

ALTER TABLE CHAT_ROOM
	ADD
		CONSTRAINT PK_CHAT_ROOM
		PRIMARY KEY (
			IDX
		);

/* 상점정보 */
CREATE TABLE STORE_DETAILS (
	STOREID VARCHAR2(50) NOT NULL, /* 아이디 */
	NOTICE NVARCHAR2(200), /* 가게내용 */
	STATUS VARCHAR2(20) NOT NULL, /* 가게상태 */
	WAY_TO_FIND NVARCHAR2(100), /* 찾아오는길 */
	MANAGE_WEEK_TIME NVARCHAR2(20) NOT NULL, /* 운영시간 평일 */
	MANAGE_SAT_TIME NVARCHAR2(20) NOT NULL, /* 운영시간 토 */
	MANAGE_SUN_TIME NVARCHAR2(20) NOT NULL, /* 운영시간 일 */
	STORE_CNT NUMBER NOT NULL, /* 보관수 */
	CERTIFICATE_PATH NVARCHAR2(500) NOT NULL /* 등록증 */
);

COMMENT ON TABLE STORE_DETAILS IS '상점정보';

COMMENT ON COLUMN STORE_DETAILS.STOREID IS '아이디';

COMMENT ON COLUMN STORE_DETAILS.NOTICE IS '가게내용';

COMMENT ON COLUMN STORE_DETAILS.STATUS IS '가게상태';

COMMENT ON COLUMN STORE_DETAILS.WAY_TO_FIND IS '찾아오는길';

COMMENT ON COLUMN STORE_DETAILS.MANAGE_WEEK_TIME IS '운영시간 평일';

COMMENT ON COLUMN STORE_DETAILS.MANAGE_SAT_TIME IS '운영시간 토';

COMMENT ON COLUMN STORE_DETAILS.MANAGE_SUN_TIME IS '운영시간 일';

COMMENT ON COLUMN STORE_DETAILS.STORE_CNT IS '보관수';

COMMENT ON COLUMN STORE_DETAILS.CERTIFICATE_PATH IS '등록증';

CREATE UNIQUE INDEX PK_STORE_DETAILS
	ON STORE_DETAILS (
		STOREID ASC
	);

ALTER TABLE STORE_DETAILS
	ADD
		CONSTRAINT PK_STORE_DETAILS
		PRIMARY KEY (
			STOREID
		);

/* 채팅참여 */
CREATE TABLE CHAT_JOIN (
	USERID VARCHAR2(50) NOT NULL, /* 아이디 */
	ROOM_IDX NVARCHAR2(2000) NOT NULL /* 인덱스 */
);

COMMENT ON TABLE CHAT_JOIN IS '채팅참여';

COMMENT ON COLUMN CHAT_JOIN.USERID IS '아이디';

COMMENT ON COLUMN CHAT_JOIN.ROOM_IDX IS '인덱스';

CREATE UNIQUE INDEX PK_CHAT_JOIN
	ON CHAT_JOIN (
		USERID ASC,
		ROOM_IDX ASC
	);

ALTER TABLE CHAT_JOIN
	ADD
		CONSTRAINT PK_CHAT_JOIN
		PRIMARY KEY (
			USERID,
			ROOM_IDX
		);

/* 권한 */
CREATE TABLE USER_AUTH (
	USERID VARCHAR2(50) NOT NULL, /* 아이디 */
	AUTH VARCHAR2(20) NOT NULL /* 권한이름 */
);

COMMENT ON TABLE USER_AUTH IS '권한';

COMMENT ON COLUMN USER_AUTH.USERID IS '아이디';

COMMENT ON COLUMN USER_AUTH.AUTH IS '권한이름';

CREATE UNIQUE INDEX PK_USER_AUTH
	ON USER_AUTH (
		USERID ASC,
		AUTH ASC
	);

ALTER TABLE USER_AUTH
	ADD
		CONSTRAINT PK_USER_AUTH
		PRIMARY KEY (
			USERID,
			AUTH
		);

ALTER TABLE EMAIL
	ADD
		CONSTRAINT FK_STOREKEEPER_TO_EMAIL
		FOREIGN KEY (
			STOREID
		)
		REFERENCES STOREKEEPER (
			STOREID
		);

ALTER TABLE STORE
	ADD
		CONSTRAINT FK_STOREKEEPER_TO_STORE
		FOREIGN KEY (
			STOREID
		)
		REFERENCES STOREKEEPER (
			STOREID
		);

ALTER TABLE ITEMS
	ADD
		CONSTRAINT FK_PREMIUM_TO_ITEMS
		FOREIGN KEY (
			PR_IDX
		)
		REFERENCES PREMIUM (
			IDX
		);

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT FK_USERS_TO_RESERVATION
		FOREIGN KEY (
			USERID
		)
		REFERENCES USERS (
			USERID
		);

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT FK_STORE_TO_RESERVATION
		FOREIGN KEY (
			STOREID
		)
		REFERENCES STORE (
			STOREID
		);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_REVIEW_TO_REVIEW
		FOREIGN KEY (
			PARENT
		)
		REFERENCES REVIEW (
			IDX
		);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_RESERVATION_TO_REVIEW
		FOREIGN KEY (
			RS_IDX
		)
		REFERENCES RESERVATION (
			IDX
		);

ALTER TABLE PREMIUM
	ADD
		CONSTRAINT FK_STOREKEEPER_TO_PREMIUM
		FOREIGN KEY (
			STOREID
		)
		REFERENCES STOREKEEPER (
			STOREID
		);

ALTER TABLE STOREKEEPER
	ADD
		CONSTRAINT FK_USERS_TO_STOREKEEPER
		FOREIGN KEY (
			STOREID
		)
		REFERENCES USERS (
			USERID
		);

ALTER TABLE CHAT_MESSAGE
	ADD
		CONSTRAINT FK_CHAT_JOIN_TO_CHAT_MESSAGE
		FOREIGN KEY (
			USERID,
			ROOM_IDX
		)
		REFERENCES CHAT_JOIN (
			USERID,
			ROOM_IDX
		);

ALTER TABLE STORE_DETAILS
	ADD
		CONSTRAINT FK_STORE_TO_STORE_DETAILS
		FOREIGN KEY (
			STOREID
		)
		REFERENCES STORE (
			STOREID
		);

ALTER TABLE CHAT_JOIN
	ADD
		CONSTRAINT FK_USERS_TO_CHAT_JOIN
		FOREIGN KEY (
			USERID
		)
		REFERENCES USERS (
			USERID
		);

ALTER TABLE CHAT_JOIN
	ADD
		CONSTRAINT FK_CHAT_ROOM_TO_CHAT_JOIN
		FOREIGN KEY (
			ROOM_IDX
		)
		REFERENCES CHAT_ROOM (
			IDX
		);

ALTER TABLE USER_AUTH
	ADD
		CONSTRAINT FK_USERS_TO_USER_AUTH
		FOREIGN KEY (
			USERID
		)
		REFERENCES USERS (
			USERID
		)
		ON DELETE CASCADE;