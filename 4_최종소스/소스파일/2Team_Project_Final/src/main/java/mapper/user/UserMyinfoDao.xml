<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "dao.user.UserMyinfoDao">
	
	<select id="userDetail" resultType="vo.user.Users">
		 select userid , userpwd , first_name , last_name
		 from users
		 where userid=#{userid}
	</select>

	<update id="userUpdate" parameterType="vo.user.Users">
		update users
			set userpwd=#{userpwd},
			first_name=#{first_name},
			last_name=#{last_name}
		where userid=#{userid}
	</update>
	
	<delete id="userDelete" parameterType="vo.user.Users">
		delete from users where userid=#{userid}
	</delete>
	
	<select id="getMyReservationList" resultType="vo.UserReservationJoinVo">
		select a.idx, c.name as storeName, a.name, a.cnt, a.price, to_char(a.payment_date, 'yy/mm/dd HH24:mm:ss') as pdate, to_char(a.sdate, 'yy/mm/dd HH24:mm:ss') as sdate, 
               to_char(a.edate, 'yy/mm/dd HH24:mm:ss') as edate, nvl(b.idx, 0) as reviewstatus, b.content
		from reservation a
		join store c on a.storeid = c.storeid
		left join review b on a.idx = b.rs_idx
		where a.userid = #{userid} and b.parent is null
		order by a.sdate desc
	</select>
	
	<select id="getMyReservationListV2" resultType="vo.UserReservationJoinVo">
		select a.idx, c.name as storeName, a.name, a.cnt, a.price, to_char(a.payment_date, 'yy/mm/dd HH24:mm:ss') as pdate, to_char(a.sdate, 'yy/mm/dd HH24:mm:ss') as sdate, 
               to_char(a.edate, 'yy/mm/dd HH24:mm:ss') as edate, nvl(b.idx, 0) as reviewstatus, b.content as userContent, to_char(b.edate, 'yy-mm-dd') as userDate, 
               d.content as storeContent, to_char(d.edate, 'yy-mm-dd') as storeDate, b.grade
		from reservation a
		join store c on a.storeid = c.storeid
		left join (select * from review where parent is null and status = 1) b on a.idx = b.rs_idx
		left join (select * from review where parent is not null and status = 1) d on a.idx = d.rs_idx
		where a.userid = #{userid}
		order by a.sdate desc
	</select>
	
	<select id="reserveInfo" resultType="HashMap">
		select st.storeid, st.name as storename, st.phone, st.address, 
		       rs.name as username, rs.cnt, rs.price, rs.sdate, rs.edate
		       
		from store st 
		inner join reservation rs on st.storeid = rs.storeid
		inner join users us 	  on us.userid = rs.userid
		
		where us.userid = #{userid}
	</select>
	
	<select id="getUserFullName" resultType="String">
		select concat(concat(last_name, ' '), first_name) as fullname 
		from users
		where userid=#{userid}
	</select>
	
	<insert id="saveUserReview" parameterType="vo.user.UserReview">
		insert into review(idx, rs_idx, name, content, grade, edate, status)
		values(review_seq.nextval, #{rs_idx}, #{name}, #{content}, #{grade}, sysdate, #{status})
	</insert>
	
	<update id="deleteUserReview">
		update review set status = 0 where idx = #{reviewIdx}
	</update>
	
</mapper>