<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- 정정자원 경로 설정 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/files/upload/**" location="/files/upload/" />
	
	<!-- 모든 컨트롤러가 공통 사용 DAO 빈 객체  참조-->
	<context:annotation-config />
	<context:component-scan base-package="controller"  />
	<context:component-scan base-package="dao"  />
	<context:component-scan base-package="service"  />
	<context:component-scan base-package="mail" />
	
	
	
	<!-- 파일 업로드 보조(반드시)  -->
	<bean  id="multipartResolver"    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize"    value="10485760"></property>
			<property name="defaultEncoding"  value="UTF-8"></property>
	</bean>
	
	<!-- 트랜잭션처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 이 이름으로 시작하는 method를 트랙잭션으로 설정함 -->
			<!-- 어디에 있는 메서드인지는 config 태그에서 설정 -->
			<tx:method name="count*" read-only="true" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="get*" read-only="true" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="increase*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			<tx:method name="update*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 여기 있는 메서드에 트랜잭션 설정을 해주세요 -->
	<!-- 현재는 serviceImpl에 있는 메서드에 트랜잭션 설정이 걸려있다. -->
	<!-- 따라서  servuceImpl수준에서 발생한 Exception에 대해서 rollback하게 된다. -->
	<aop:config>
		<aop:pointcut expression="execution(* com.XXX.YYY..*ServiceImpl.*(..))" id="serviceMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" id="transactionAdvisor"/>
	</aop:config>
	
	
	
	
</beans>
